{"ast":null,"code":"var _jsxFileName = \"/Users/hanziniu/aureole-e-commerce/e-commerce/src/components/contexts/cart.context.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from 'react';\n/* \nproduct {id, name, price, imageUrl}\nCart Item {id, name, price, imageUrl, quantity}\n*/\n// get back a new array of car items\n// The map() method creates a new array\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst addCartItem = (cartItems, productToAdd) => {\n  // find if cartItems contains productToAdd\n  // Array.prototype.find()\n  // 这个existingCartItem是用来判断cartItems里面是否存在productToadd的东西\n  // find一般来说会返回cartItems里的一项，如果没有则不返回\n  // creating a new cart item\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === productToAdd.id); // If found, increment quantity\n  // map迭代返回新的数组，cartItems里面跟productToAdd相同id的+1\n  // 不相同的cartItem则保持不变\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === productToAdd.id ? { ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  } // return new array with modified cartItems / new cart item\n  // productToAdd不存在CartItem里面，则新增productToAdd于cartItems中，数量标1\n\n\n  return [...cartItems, { ...productToAdd,\n    quantity: 1\n  }];\n};\n\nconst removeCartItem = (cartItems, cartItemToRemove) => {\n  // find the cart item to remove\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToRemove.id); // check if quantity is equal to 1 , if it is remove that item from the cart\n\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id);\n  } // return back cartitems with matching cart item with reduced quantity\n\n\n  return cartItems.map(cartItem => cartItem.id === cartItemToRemove.id ? { ...cartItem,\n    quantity: cartItem.quantity - 1\n  } : cartItem);\n};\n\nconst clearCartItem = (cartItems, cartItemToRemove) => cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id);\n\nexport const CartContext = /*#__PURE__*/createContext({\n  isCartOpen: false,\n  setIsCartOpen: () => {},\n  cartItems: [],\n  addItemToCart: () => {},\n  removeItemFromCart: () => {},\n  clearItemFromCart: () => {},\n  cartCount: 0,\n  cartTotal: 0\n});\nexport const CartProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [isCartOpen, setIsCartOpen] = useState(false); // init the cart items and setCartItems\n\n  const [cartItems, setCartItems] = useState([]); // recounting the total quantity every time the car items changes\n\n  const [cartCount, setCartCount] = useState(0);\n  const [cartTotal, setCartTotal] = useState(0);\n  useEffect(() => {\n    const newCartCount = cartItems.reduce((total, cartItem) => total + cartItem.quantity, 0);\n    setCartCount(newCartCount);\n  }, [cartItems]);\n  useEffect(() => {\n    const newCartTotal = cartItems.reduce((total, cartItem) => total + cartItem.quantity * cartItem.price, 0);\n    setCartTotal(newCartTotal);\n  }, [cartItems.quantity]); // when user clicks on this <Add to Cart>\n\n  const addItemToCart = productToAdd => {\n    // useState更新状态， give back the appropriate array\n    setCartItems(addCartItem(cartItems, productToAdd));\n  };\n\n  const removeItemToCart = cartItemToRemove => {\n    setCartItems(removeCartItem(cartItems, cartItemToRemove));\n  };\n\n  const clearItemToCart = cartItemToClear => {\n    setCartItems(clearCartItem(cartItems, cartItemToClear));\n  };\n\n  const value = {\n    isCartOpen,\n    setIsCartOpen,\n    cartItems,\n    addItemToCart,\n    removeItemToCart,\n    clearItemToCart,\n    cartCount,\n    cartTotal\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 10\n  }, this);\n};\n\n_s(CartProvider, \"Q34pEVQNnwOC1WPCa5SwU/+yuyE=\");\n\n_c = CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","addCartItem","cartItems","productToAdd","existingCartItem","find","cartItem","id","map","quantity","removeCartItem","cartItemToRemove","filter","clearCartItem","CartContext","isCartOpen","setIsCartOpen","addItemToCart","removeItemFromCart","clearItemFromCart","cartCount","cartTotal","CartProvider","children","setCartItems","setCartCount","setCartTotal","newCartCount","reduce","total","newCartTotal","price","removeItemToCart","clearItemToCart","cartItemToClear","value"],"sources":["/Users/hanziniu/aureole-e-commerce/e-commerce/src/components/contexts/cart.context.jsx"],"sourcesContent":["import { createContext, useState, useEffect } from 'react';\n\n/* \nproduct {id, name, price, imageUrl}\nCart Item {id, name, price, imageUrl, quantity}\n*/\n\n// get back a new array of car items\n// The map() method creates a new array\nconst addCartItem = (cartItems, productToAdd) => {\n  // find if cartItems contains productToAdd\n  // Array.prototype.find()\n  // 这个existingCartItem是用来判断cartItems里面是否存在productToadd的东西\n  // find一般来说会返回cartItems里的一项，如果没有则不返回\n  // creating a new cart item\n  const existingCartItem = cartItems.find(\n    (cartItem) => cartItem.id === productToAdd.id\n  );\n\n  // If found, increment quantity\n  // map迭代返回新的数组，cartItems里面跟productToAdd相同id的+1\n  // 不相同的cartItem则保持不变\n  if (existingCartItem) {\n    return cartItems.map((cartItem) =>\n      cartItem.id === productToAdd.id\n        ? { ...cartItem, quantity: cartItem.quantity + 1 }\n        : cartItem\n    );\n  }\n\n  // return new array with modified cartItems / new cart item\n  // productToAdd不存在CartItem里面，则新增productToAdd于cartItems中，数量标1\n  return [...cartItems, { ...productToAdd, quantity: 1 }];\n};\n\nconst removeCartItem = (cartItems, cartItemToRemove) => {\n  // find the cart item to remove\n  const existingCartItem = cartItems.find(\n    (cartItem) => cartItem.id === cartItemToRemove.id\n  );\n\n  // check if quantity is equal to 1 , if it is remove that item from the cart\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter((cartItem) => cartItem.id !== cartItemToRemove.id);\n  }\n\n  // return back cartitems with matching cart item with reduced quantity\n  return cartItems.map((cartItem) =>\n    cartItem.id === cartItemToRemove.id\n      ? { ...cartItem, quantity: cartItem.quantity - 1 }\n      : cartItem\n  );\n};\n\nconst clearCartItem = (cartItems, cartItemToRemove) =>\n  cartItems.filter((cartItem) => cartItem.id !== cartItemToRemove.id);\n\nexport const CartContext = createContext({\n  isCartOpen: false,\n  setIsCartOpen: () => {},\n\n  cartItems: [],\n  addItemToCart: () => {},\n\n  removeItemFromCart: () => {},\n\n  clearItemFromCart: () => {},\n\n  cartCount: 0,\n\n  cartTotal: 0,\n});\n\nexport const CartProvider = ({ children }) => {\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  // init the cart items and setCartItems\n  const [cartItems, setCartItems] = useState([]);\n\n  // recounting the total quantity every time the car items changes\n  const [cartCount, setCartCount] = useState(0);\n\n  const [cartTotal, setCartTotal] = useState(0);\n\n  useEffect(() => {\n    const newCartCount = cartItems.reduce(\n      (total, cartItem) => total + cartItem.quantity,\n      0\n    );\n    setCartCount(newCartCount);\n  }, [cartItems]);\n\n  useEffect(() => {\n    const newCartTotal = cartItems.reduce(\n      (total, cartItem) => total + cartItem.quantity * cartItem.price,\n      0\n    );\n    setCartTotal(newCartTotal);\n  }, [cartItems.quantity]);\n\n  // when user clicks on this <Add to Cart>\n  const addItemToCart = (productToAdd) => {\n    // useState更新状态， give back the appropriate array\n    setCartItems(addCartItem(cartItems, productToAdd));\n  };\n\n  const removeItemToCart = (cartItemToRemove) => {\n    setCartItems(removeCartItem(cartItems, cartItemToRemove));\n  };\n\n  const clearItemToCart = (cartItemToClear) => {\n    setCartItems(clearCartItem(cartItems, cartItemToClear));\n  };\n\n  const value = {\n    isCartOpen,\n    setIsCartOpen,\n    cartItems,\n    addItemToCart,\n    removeItemToCart,\n    clearItemToCart,\n    cartCount,\n    cartTotal,\n  };\n  return <CartContext.Provider value={value}>{children}</CartContext.Provider>;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}