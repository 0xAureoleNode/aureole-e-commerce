{"ast":null,"code":"// Import the functions you need from the SDKs you need\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword } from 'firebase/auth'; // TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\nimport { getFirestore, doc, getDoc, setDoc } from 'firebase/firestore'; // Your web app's Firebase configuration\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyALOjtn7jZIEUziIpNHxVfeOdOEoQDP3V8',\n  authDomain: 'e-commerce-db-9450a.firebaseapp.com',\n  projectId: 'e-commerce-db-9450a',\n  storageBucket: 'e-commerce-db-9450a.appspot.com',\n  messagingSenderId: '731145164187',\n  appId: '1:731145164187:web:e34c39bf7ec0e911acfd3e'\n}; // Initialize Firebase\n\nconst app = initializeApp(firebaseConfig); // Create an instance of the Google provider object - https://firebase.google.com/docs/auth/web/google-signin\n\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  // Forces account selection even when one account\n  // is available.\n  prompt: 'select_account'\n}); // Initialize Firebase Authentication\n\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider);\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, googleProvider); // Initialize Cloud Firestore\n\nexport const db = getFirestore();\nexport const createUserDocumentFromAuth = async function (userAuth) {\n  let additionalInformation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (!userAuth) return; // Add a new document in collection \"users\"\n\n  const userDocRef = doc(db, 'users', userAuth.uid);\n  const userSnapshot = await getDoc(userDocRef);\n  console.log(userSnapshot);\n  console.log(userSnapshot.exists()); // check data exists\n\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation\n      });\n    } catch (error) {\n      console.log('error creating the user', error.message);\n    }\n  }\n\n  return userDocRef;\n};\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};","map":{"version":3,"names":["initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","getFirestore","doc","getDoc","setDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","googleProvider","setCustomParameters","prompt","auth","signInWithGooglePopup","signInWithGoogleRedirect","db","createUserDocumentFromAuth","userAuth","additionalInformation","userDocRef","uid","userSnapshot","console","log","exists","displayName","email","createdAt","Date","error","message","createAuthUserWithEmailAndPassword","password"],"sources":["/Users/hanziniu/aureole-e-commerce/e-commerce/src/utils/firebase/firebase.utils.js"],"sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from 'firebase/app';\nimport {\n  getAuth,\n  signInWithRedirect,\n  signInWithPopup,\n  GoogleAuthProvider,\n  createUserWithEmailAndPassword,\n} from 'firebase/auth';\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\nimport { getFirestore, doc, getDoc, setDoc } from 'firebase/firestore';\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: 'AIzaSyALOjtn7jZIEUziIpNHxVfeOdOEoQDP3V8',\n  authDomain: 'e-commerce-db-9450a.firebaseapp.com',\n  projectId: 'e-commerce-db-9450a',\n  storageBucket: 'e-commerce-db-9450a.appspot.com',\n  messagingSenderId: '731145164187',\n  appId: '1:731145164187:web:e34c39bf7ec0e911acfd3e',\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Create an instance of the Google provider object - https://firebase.google.com/docs/auth/web/google-signin\nconst googleProvider = new GoogleAuthProvider();\n\ngoogleProvider.setCustomParameters({\n  // Forces account selection even when one account\n  // is available.\n  prompt: 'select_account',\n});\n\n// Initialize Firebase Authentication\nexport const auth = getAuth();\n\nexport const signInWithGooglePopup = () =>\n  signInWithPopup(auth, googleProvider);\nexport const signInWithGoogleRedirect = () =>\n  signInWithRedirect(auth, googleProvider);\n\n// Initialize Cloud Firestore\nexport const db = getFirestore();\n\nexport const createUserDocumentFromAuth = async (\n  userAuth,\n  additionalInformation = {}\n) => {\n  if (!userAuth) return;\n  // Add a new document in collection \"users\"\n  const userDocRef = doc(db, 'users', userAuth.uid);\n\n  const userSnapshot = await getDoc(userDocRef);\n  console.log(userSnapshot);\n  console.log(userSnapshot.exists());\n\n  // check data exists\n  if (!userSnapshot.exists()) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation,\n      });\n    } catch (error) {\n      console.log('error creating the user', error.message);\n    }\n  }\n\n  return userDocRef;\n};\n\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\n"],"mappings":"AAAA;AACA,SAASA,aAAT,QAA8B,cAA9B;AACA,SACEC,OADF,EAEEC,kBAFF,EAGEC,eAHF,EAIEC,kBAJF,EAKEC,8BALF,QAMO,eANP,C,CAOA;AACA;;AAEA,SAASC,YAAT,EAAuBC,GAAvB,EAA4BC,MAA5B,EAAoCC,MAApC,QAAkD,oBAAlD,C,CAEA;;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCADa;EAErBC,UAAU,EAAE,qCAFS;EAGrBC,SAAS,EAAE,qBAHU;EAIrBC,aAAa,EAAE,iCAJM;EAKrBC,iBAAiB,EAAE,cALE;EAMrBC,KAAK,EAAE;AANc,CAAvB,C,CASA;;AACA,MAAMC,GAAG,GAAGjB,aAAa,CAACU,cAAD,CAAzB,C,CAEA;;AACA,MAAMQ,cAAc,GAAG,IAAId,kBAAJ,EAAvB;AAEAc,cAAc,CAACC,mBAAf,CAAmC;EACjC;EACA;EACAC,MAAM,EAAE;AAHyB,CAAnC,E,CAMA;;AACA,OAAO,MAAMC,IAAI,GAAGpB,OAAO,EAApB;AAEP,OAAO,MAAMqB,qBAAqB,GAAG,MACnCnB,eAAe,CAACkB,IAAD,EAAOH,cAAP,CADV;AAEP,OAAO,MAAMK,wBAAwB,GAAG,MACtCrB,kBAAkB,CAACmB,IAAD,EAAOH,cAAP,CADb,C,CAGP;;AACA,OAAO,MAAMM,EAAE,GAAGlB,YAAY,EAAvB;AAEP,OAAO,MAAMmB,0BAA0B,GAAG,gBACxCC,QADwC,EAGrC;EAAA,IADHC,qBACG,uEADqB,EACrB;EACH,IAAI,CAACD,QAAL,EAAe,OADZ,CAEH;;EACA,MAAME,UAAU,GAAGrB,GAAG,CAACiB,EAAD,EAAK,OAAL,EAAcE,QAAQ,CAACG,GAAvB,CAAtB;EAEA,MAAMC,YAAY,GAAG,MAAMtB,MAAM,CAACoB,UAAD,CAAjC;EACAG,OAAO,CAACC,GAAR,CAAYF,YAAZ;EACAC,OAAO,CAACC,GAAR,CAAYF,YAAY,CAACG,MAAb,EAAZ,EAPG,CASH;;EACA,IAAI,CAACH,YAAY,CAACG,MAAb,EAAL,EAA4B;IAC1B,MAAM;MAAEC,WAAF;MAAeC;IAAf,IAAyBT,QAA/B;IACA,MAAMU,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;IAEA,IAAI;MACF,MAAM5B,MAAM,CAACmB,UAAD,EAAa;QACvBM,WADuB;QAEvBC,KAFuB;QAGvBC,SAHuB;QAIvB,GAAGT;MAJoB,CAAb,CAAZ;IAMD,CAPD,CAOE,OAAOW,KAAP,EAAc;MACdP,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCM,KAAK,CAACC,OAA7C;IACD;EACF;;EAED,OAAOX,UAAP;AACD,CA9BM;AAgCP,OAAO,MAAMY,kCAAkC,GAAG,OAAOL,KAAP,EAAcM,QAAd,KAA2B;EAC3E,IAAI,CAACN,KAAD,IAAU,CAACM,QAAf,EAAyB;EAEzB,OAAO,MAAMpC,8BAA8B,CAACgB,IAAD,EAAOc,KAAP,EAAcM,QAAd,CAA3C;AACD,CAJM"},"metadata":{},"sourceType":"module"}