{"ast":null,"code":"import _slicedToArray from\"/Users/hanziniu/aureole-e-commerce/e-commerce/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _toConsumableArray from\"/Users/hanziniu/aureole-e-commerce/e-commerce/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"/Users/hanziniu/aureole-e-commerce/e-commerce/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{createContext,useState,useEffect}from'react';/* \nproduct {id, name, price, imageUrl}\nCart Item {id, name, price, imageUrl, quantity}\n*/ // get back a new array of car items\n// The map() method creates a new array\nimport{jsx as _jsx}from\"react/jsx-runtime\";var addCartItem=function addCartItem(cartItems,productToAdd){// find if cartItems contains productToAdd\n// Array.prototype.find()\n// 这个existingCartItem是用来判断cartItems里面是否存在productToadd的东西\n// find一般来说会返回cartItems里的一项，如果没有则不返回\n// creating a new cart item\nvar existingCartItem=cartItems.find(function(cartItem){return cartItem.id===productToAdd.id;});// If found, increment quantity\n// map迭代返回新的数组，cartItems里面跟productToAdd相同id的+1\n// 不相同的cartItem则保持不变\nif(existingCartItem){return cartItems.map(function(cartItem){return cartItem.id===productToAdd.id?_objectSpread(_objectSpread({},cartItem),{},{quantity:cartItem.quantity+1}):cartItem;});}// return new array with modified cartItems / new cart item\n// productToAdd不存在CartItem里面，则新增productToAdd于cartItems中，数量标1\nreturn[].concat(_toConsumableArray(cartItems),[_objectSpread(_objectSpread({},productToAdd),{},{quantity:1})]);};var removeCartItem=function removeCartItem(cartItems,cartItemToRemove){// find the cart item to remove\nvar existingCartItem=cartItems.find(function(cartItem){return cartItem.id===cartItemToRemove.id;});// check if quantity is equal to 1 , if it is remove that item from the cart\nif(existingCartItem.quantity===1){return cartItems.filter(function(cartItem){return cartItem.id!==cartItemToRemove.id;});}// return back cartitems with matching cart item with reduced quantity\nreturn cartItems.map(function(cartItem){return cartItem.id===cartItemToRemove.id?_objectSpread(_objectSpread({},cartItem),{},{quantity:cartItem.quantity-1}):cartItem;});};var clearCartItem=function clearCartItem(cartItems,cartItemToRemove){return cartItems.filter(function(cartItem){return cartItem.id!==cartItemToRemove.id;});};export var CartContext=/*#__PURE__*/createContext({isCartOpen:false,setIsCartOpen:function setIsCartOpen(){},cartItems:[],addItemToCart:function addItemToCart(){},removeItemFromCart:function removeItemFromCart(){},clearItemFromCart:function clearItemFromCart(){},cartCount:0,cartTotal:0});export var CartProvider=function CartProvider(_ref){var children=_ref.children;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isCartOpen=_useState2[0],setIsCartOpen=_useState2[1];// init the cart items and setCartItems\nvar _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),cartItems=_useState4[0],setCartItems=_useState4[1];// recounting the total quantity every time the car items changes\nvar _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),cartCount=_useState6[0],setCartCount=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),cartTotal=_useState8[0],setCartTotal=_useState8[1];useEffect(function(){var newCartCount=cartItems.reduce(function(total,cartItem){return total+cartItem.quantity;},0);setCartCount(newCartCount);},[cartItems]);useEffect(function(){var newCartTotal=cartItems.reduce(function(total,cartItem){return total+cartItem.quantity*cartItem.price;},0);setCartTotal(newCartTotal);},[cartItems]);// when user clicks on this <Add to Cart>\nvar addItemToCart=function addItemToCart(productToAdd){// useState更新状态， give back the appropriate array\nsetCartItems(addCartItem(cartItems,productToAdd));};var removeItemToCart=function removeItemToCart(cartItemToRemove){setCartItems(removeCartItem(cartItems,cartItemToRemove));};var clearItemToCart=function clearItemToCart(cartItemToClear){setCartItems(clearCartItem(cartItems,cartItemToClear));};var value={isCartOpen:isCartOpen,setIsCartOpen:setIsCartOpen,cartItems:cartItems,addItemToCart:addItemToCart,removeItemToCart:removeItemToCart,clearItemToCart:clearItemToCart,cartCount:cartCount,cartTotal:cartTotal};return/*#__PURE__*/_jsx(CartContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["createContext","useState","useEffect","addCartItem","cartItems","productToAdd","existingCartItem","find","cartItem","id","map","quantity","removeCartItem","cartItemToRemove","filter","clearCartItem","CartContext","isCartOpen","setIsCartOpen","addItemToCart","removeItemFromCart","clearItemFromCart","cartCount","cartTotal","CartProvider","children","setCartItems","setCartCount","setCartTotal","newCartCount","reduce","total","newCartTotal","price","removeItemToCart","clearItemToCart","cartItemToClear","value"],"sources":["/Users/hanziniu/aureole-e-commerce/e-commerce/src/components/contexts/cart.context.jsx"],"sourcesContent":["import { createContext, useState, useEffect } from 'react';\n\n/* \nproduct {id, name, price, imageUrl}\nCart Item {id, name, price, imageUrl, quantity}\n*/\n\n// get back a new array of car items\n// The map() method creates a new array\nconst addCartItem = (cartItems, productToAdd) => {\n  // find if cartItems contains productToAdd\n  // Array.prototype.find()\n  // 这个existingCartItem是用来判断cartItems里面是否存在productToadd的东西\n  // find一般来说会返回cartItems里的一项，如果没有则不返回\n  // creating a new cart item\n  const existingCartItem = cartItems.find(\n    (cartItem) => cartItem.id === productToAdd.id\n  );\n\n  // If found, increment quantity\n  // map迭代返回新的数组，cartItems里面跟productToAdd相同id的+1\n  // 不相同的cartItem则保持不变\n  if (existingCartItem) {\n    return cartItems.map((cartItem) =>\n      cartItem.id === productToAdd.id\n        ? { ...cartItem, quantity: cartItem.quantity + 1 }\n        : cartItem\n    );\n  }\n\n  // return new array with modified cartItems / new cart item\n  // productToAdd不存在CartItem里面，则新增productToAdd于cartItems中，数量标1\n  return [...cartItems, { ...productToAdd, quantity: 1 }];\n};\n\nconst removeCartItem = (cartItems, cartItemToRemove) => {\n  // find the cart item to remove\n  const existingCartItem = cartItems.find(\n    (cartItem) => cartItem.id === cartItemToRemove.id\n  );\n\n  // check if quantity is equal to 1 , if it is remove that item from the cart\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter((cartItem) => cartItem.id !== cartItemToRemove.id);\n  }\n\n  // return back cartitems with matching cart item with reduced quantity\n  return cartItems.map((cartItem) =>\n    cartItem.id === cartItemToRemove.id\n      ? { ...cartItem, quantity: cartItem.quantity - 1 }\n      : cartItem\n  );\n};\n\nconst clearCartItem = (cartItems, cartItemToRemove) =>\n  cartItems.filter((cartItem) => cartItem.id !== cartItemToRemove.id);\n\nexport const CartContext = createContext({\n  isCartOpen: false,\n  setIsCartOpen: () => {},\n\n  cartItems: [],\n  addItemToCart: () => {},\n\n  removeItemFromCart: () => {},\n\n  clearItemFromCart: () => {},\n\n  cartCount: 0,\n\n  cartTotal: 0,\n});\n\nexport const CartProvider = ({ children }) => {\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  // init the cart items and setCartItems\n  const [cartItems, setCartItems] = useState([]);\n\n  // recounting the total quantity every time the car items changes\n  const [cartCount, setCartCount] = useState(0);\n\n  const [cartTotal, setCartTotal] = useState(0);\n\n  useEffect(() => {\n    const newCartCount = cartItems.reduce(\n      (total, cartItem) => total + cartItem.quantity,\n      0\n    );\n    setCartCount(newCartCount);\n  }, [cartItems]);\n\n  useEffect(() => {\n    const newCartTotal = cartItems.reduce(\n      (total, cartItem) => total + cartItem.quantity * cartItem.price,\n      0\n    );\n    setCartTotal(newCartTotal);\n  }, [cartItems]);\n\n  // when user clicks on this <Add to Cart>\n  const addItemToCart = (productToAdd) => {\n    // useState更新状态， give back the appropriate array\n    setCartItems(addCartItem(cartItems, productToAdd));\n  };\n\n  const removeItemToCart = (cartItemToRemove) => {\n    setCartItems(removeCartItem(cartItems, cartItemToRemove));\n  };\n\n  const clearItemToCart = (cartItemToClear) => {\n    setCartItems(clearCartItem(cartItems, cartItemToClear));\n  };\n\n  const value = {\n    isCartOpen,\n    setIsCartOpen,\n    cartItems,\n    addItemToCart,\n    removeItemToCart,\n    clearItemToCart,\n    cartCount,\n    cartTotal,\n  };\n  return <CartContext.Provider value={value}>{children}</CartContext.Provider>;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}